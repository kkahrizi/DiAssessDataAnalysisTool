/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ToolUI;

import java.awt.FlowLayout;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author kamin
 */
public class OutputFrame extends javax.swing.JFrame {

    /**
     * Creates new form OutputFrame
     */
    BufferedImage toSave;
    public ArrayList<TTRTuple> TTRDat;
    public final static int THERMOCYCLER = 0;
    public final static int PCRTUBES = 1;
    public OutputFrame(BufferedImage outputImage, int source, ArrayList<TTRTuple> TTRData) {
        initComponents();
        if(source == THERMOCYCLER){
            jButton2.setText("Save plots to .png");
            jButton2.setText("Save TTR data to .csv");
            TTRDat = TTRData;
            jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformedThermo(evt);
            }
        });
        } else if (source == PCRTUBES) {
            jButton2.setText("Reorder images");
        }
        toSave = outputImage;
        jPanel1.setLayout(new FlowLayout());
        jPanel1.add(new JLabel(new ImageIcon(outputImage)));
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.pack();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePane = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1057, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );

        imagePane.setViewportView(jPanel1);

        jButton1.setText("Save to file...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reorder images...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imagePane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePane, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformedThermo(java.awt.event.ActionEvent evt) {
        JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            File chosenFile = null;
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                chosenFile = chooser.getSelectedFile();
                String filePath = chosenFile.getAbsolutePath();
                System.out.println(filePath);
                if (!(filePath.endsWith(".csv"))) {
                    
                    chosenFile = new File(filePath + ".csv");
                
                }
           }
        try {
            // Write TTR data
            writeTTRData(chosenFile,TTRDat);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this,"Failed to save file " + chosenFile.getAbsolutePath());
            return;
        }
        JOptionPane.showMessageDialog(this,"Success! Saved to " + chosenFile.getAbsolutePath());
    }
    
    public void writeTTRData (File toWrite, ArrayList<TTRTuple> data) throws IOException {
        PrintWriter writer = new PrintWriter(toWrite);
        StringBuilder sb = new StringBuilder();
        String[] rows = new String[data.size()];
        int index = 0;
        while (!data.isEmpty()){
            TTRTuple thisPair = data.remove(0);
            String thisLabel = thisPair.Label;
            Double thisTime = thisPair.TTR;
            rows[index] = thisLabel + "," + Double.toString(thisTime);
            index++;
        }
        
        for (int i = 0; i < rows.length; i++){
            sb.append(rows[i]);
            sb.append('\n');
        }     
        writer.write(sb.toString());
        writer.close();
        
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            File chosenFile = null;
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                chosenFile = chooser.getSelectedFile();
                String filePath = chosenFile.getAbsolutePath();
                System.out.println(filePath);
                if (!(filePath.endsWith(".png") || filePath.endsWith(".jpeg") || filePath.endsWith(".jpg"))) {
                    
                    chosenFile = new File(filePath + ".png");
                
                }
           }
        try {
            // retrieve image
            ImageIO.write(toSave, "png", chosenFile);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this,"Failed to save file " + chosenFile.getAbsolutePath());
            return;
        }
        JOptionPane.showMessageDialog(this,"Success! Saved to " + chosenFile.getAbsolutePath());
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane imagePane;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
